/*
 * Copyright (c) 2018 - Arcade Analytics LTD (https://arcadeanalytics.com)
 */

/* Generated By:JJTree: Do not edit this line. ORollbackStatement.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=true,NODE_PREFIX=O,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.arcadedb.sql.parser;

import com.arcadedb.sql.executor.CommandContext;
import com.arcadedb.sql.executor.InternalResultSet;
import com.arcadedb.sql.executor.ResultInternal;
import com.arcadedb.sql.executor.ResultSet;

import java.util.Map;

public class RollbackStatement extends SimpleExecStatement {
  public RollbackStatement(int id) {
    super(id);
  }

  public RollbackStatement(SqlParser p, int id) {
    super(p, id);
  }

  @Override public ResultSet executeSimple(CommandContext ctx) {
    ctx.getDatabase().rollback();
    InternalResultSet result = new InternalResultSet();
    ResultInternal item = new ResultInternal();
    item.setProperty("operation", "rollback");
    result.add(item);
    return result;
  }


  @Override public void toString(Map<Object, Object> params, StringBuilder builder) {
    builder.append("ROLLBACK");
  }

  @Override public RollbackStatement copy() {
    RollbackStatement result = new RollbackStatement(-1);
    return result;
  }

  @Override public boolean equals(Object o) {
    if (this == o)
      return true;
    return o != null && getClass() == o.getClass();
  }

  @Override public int hashCode() {
    return 0;
  }
}
/* JavaCC - OriginalChecksum=7efe0306e0cec51e035d64cad02ebc30 (do not edit this line) */
