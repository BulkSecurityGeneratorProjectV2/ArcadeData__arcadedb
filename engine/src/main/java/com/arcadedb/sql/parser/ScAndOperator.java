/*
 * Copyright (c) 2018 - Arcade Analytics LTD (https://arcadeanalytics.com)
 */

/* Generated By:JJTree: Do not edit this line. OScAndOperator.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=true,NODE_PREFIX=O,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.arcadedb.sql.parser;

import com.arcadedb.database.DatabaseInternal;
import com.arcadedb.sql.executor.OQueryOperatorEquals;

public
class ScAndOperator extends SimpleNode implements BinaryCompareOperator {

  OQueryOperatorEquals lowLevelOperator = null;
  public ScAndOperator(int id) {
    super(id);
  }

  public ScAndOperator(SqlParser p, int id) {
    super(p, id);
  }


  /** Accept the visitor. **/
  public Object jjtAccept(SqlParserVisitor visitor, Object data) {
    return visitor.visit(this, data);
  }

  @Override
  public boolean execute(DatabaseInternal database, Object iLeft, Object iRight) {
    if(lowLevelOperator==null) {
      //TODO implement this!
    }
    if(lowLevelOperator==null) {
      throw new UnsupportedOperationException();
    }
    return false;
  }

  @Override
  public String toString() {
    return "&&";
  }

  @Override public boolean supportsBasicCalculation() {
    return true;
  }

  @Override public ScAndOperator copy() {
    return this;
  }

  @Override public boolean equals(Object obj) {
    return obj != null && obj.getClass().equals(this.getClass());
  }

  @Override public int hashCode() {
    return getClass().hashCode();
  }
}
/* JavaCC - OriginalChecksum=12592a24f576571470ce760aff503b30 (do not edit this line) */
